####################################################################################
## Ran some code using PremiumSubset Example on local machine and on Stampede2 #####
####################################################################################


#######################
### Local machine #####
#######################

> setwd("~/Stapleton_Lab/Projects/Premium/R work")
> library(plyr)
> library(dplyr)
> library(tidyr)
> ##library(xlsx)
> library(PReMiuM)
> subin=read.csv("../Subset_of_Final_Input.csv")
> subin$brand_hybrid<-as.character(subin$brand_hybrid)
> numericVars <- which(sapply(subin, class)=='numeric' & names(subin) != 'Yield')
> categoricalVars <- which(sapply(subin, class)=='character' & names(subin) != 'Yield')
> system.time({
+
+   mod <- profRegr(covName, outcome = 'Yield',
+                   yModel = 'Normal', xModel = "Mixed",
+                   #nCovariates = 2,
+                   #fixedEffectsNames = 'yield',
+                   discreteCovs = c(names(subin[categoricalVars])),
+                   continuousCovs = c(names(subin[numericVars])),
+                   data = subin)
+ })
[1] "Recoding of covariate number brand_hybrid as follows"
 [1] "Replacing level AgriGold A6499STXRIB with 0"          "Replacing level AgriGold A6533VT3PRIB with 1"
 [3] "Replacing level Beck-XL 5939AMXT\x89\xe3\xa2* with 2" "Replacing level Beck-XL 6365AMX\x89\xe3\xa2* with 3"
 [5] "Replacing level Burrus-6T54 3000GT with 4"            "Replacing level DEKALB-DKC53-78 SSRIB with 5"
 [7] "Replacing level MAT CHECK-LATE with 6"                "Replacing level Power Plus-5C17 AMXT with 7"
 [9] "Replacing level Power Plus-6P75 AMXT with 8"          "Replacing level Stone-6378RIB with 9"
Random number seed: 1515515295
Sweep: 1
Sweep: 500
Sweep: 1000
...
Sweep: 10500
Sweep: 11000
   user  system elapsed
  8.220   0.705   9.047
> library(parallel)
> detectCores()
[1] 8
> ##detectCores() 8 cores
> require(snow)
> hostnames <- rep('localhost', 8)
> cluster <- makeSOCKcluster(hostnames)
> ptm <- proc.time()
> result <- clusterCall(cluster, eval, profRegr(covName, outcome = 'Yield',
+                                          yModel = 'Normal', xModel = "Mixed",
+                                          #nCovariates = 2,
+                                          #fixedEffectsNames = 'yield',
+                                          discreteCovs = c(names(subin[categoricalVars])),
+                                          continuousCovs = c(names(subin[numericVars])),
+                                          data = subin))##clusterApply(cluster, 1:10, function(i) myProc())
[1] "Recoding of covariate number brand_hybrid as follows"
 [1] "Replacing level AgriGold A6499STXRIB with 0"          "Replacing level AgriGold A6533VT3PRIB with 1"
 [3] "Replacing level Beck-XL 5939AMXT\x89\xe3\xa2* with 2" "Replacing level Beck-XL 6365AMX\x89\xe3\xa2* with 3"
 [5] "Replacing level Burrus-6T54 3000GT with 4"            "Replacing level DEKALB-DKC53-78 SSRIB with 5"
 [7] "Replacing level MAT CHECK-LATE with 6"                "Replacing level Power Plus-5C17 AMXT with 7"
 [9] "Replacing level Power Plus-6P75 AMXT with 8"          "Replacing level Stone-6378RIB with 9"
Random number seed: 1515515329
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 10500
Sweep: 11000
> proc.time() - ptm
   user  system elapsed
  7.783   0.765  10.506
> stopCluster(cluster)
> ptm <- proc.time()
> inputs <- generateSampleDataFile(clusSummaryNormalDiscrete())
> runInfoObj<-profRegr(yModel=inputs$yModel, xModel=inputs$xModel, nSweeps=10000, nClusInit=15, nBurn=20000,
+                      data=inputs$inputData, output="output", covNames = inputs$covName, fixedEffectsNames = inputs$fixedEffectNames, seed=12345)
Random number seed: 12345
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 29500
Sweep: 30000
> proc.time() - ptm
   user  system elapsed
128.171   1.457 140.550
> ##clusterCall(cl, eval, myfunc(arg1,arg2,...))
> require(snow)
> hostnames <- rep('localhost', 8)
> cluster <- makeSOCKcluster(hostnames)
> ptm <- proc.time()
> result <- clusterCall(cluster, eval, profRegr(yModel=inputs$yModel, xModel=inputs$xModel, nSweeps=10000, nClusInit=15, nBurn=20000,
+                                               data=inputs$inputData, output="output", covNames = inputs$covName, fixedEffectsNames = inputs$fixedEffectNames, seed=12345))
Random number seed: 12345
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 29500
Sweep: 30000
> proc.time() - ptm
   user  system elapsed
125.656   1.441 128.047
> stopCluster(cluster)


###############################
###  Stampede2 machine   ######
###############################
> library(PReMiuM)
> getwd()
[1] "/home1/04734/dhbrand/training"
> subin=read.csv("Subset_of_Final_Input.csv")
> subin$brand_hybrid <- as.character(subin$brand_hybrid)
> numericVars <- which(sapply(subin, class)=='numeric' & names(subin) != 'Yield')
> categoricalVars <- which(sapply(subin, class)=='character' & names(subin) != 'Yield')
> system.time({
+
+   mod <- profRegr(covName, outcome = 'Yield',
+                   yModel = 'Normal', xModel = "Mixed",
+                   #nCovariates = 2,
+                   #fixedEffectsNames = 'yield',
+                   discreteCovs = c(names(subin[categoricalVars])),
+                   continuousCovs = c(names(subin[numericVars])),
+                   data = subin)
+ })
[1] "Recoding of covariate number brand_hybrid as follows"
 [1] "Replacing level AgriGold A6499STXRIB with 0"
 [2] "Replacing level AgriGold A6533VT3PRIB with 1"
 [3] "Replacing level Beck-XL 5939AMXT\x89\xe3\xa2* with 2"
 [4] "Replacing level Beck-XL 6365AMX\x89\xe3\xa2* with 3"
 [5] "Replacing level Burrus-6T54 3000GT with 4"
 [6] "Replacing level DEKALB-DKC53-78 SSRIB with 5"
 [7] "Replacing level MAT CHECK-LATE with 6"
 [8] "Replacing level Power Plus-5C17 AMXT with 7"
 [9] "Replacing level Power Plus-6P75 AMXT with 8"
[10] "Replacing level Stone-6378RIB with 9"
Random number seed: 1515513800
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 10500
Sweep: 11000
   user  system elapsed
  4.669   0.672   5.462
> library(parallel)
> detectCores()
[1] 28
> require(snow
+ )
Loading required package: snow

Attaching package: ‘snow’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, clusterSplit, makeCluster, parApply,
    parCapply, parLapply, parRapply, parSapply, splitIndices,
    stopCluster

> hostnames <- rep('localhost',27)
> cluster <- makeSOCKcluster(hostnames)
> ptm <- proc.time()
> result <- clusterCall(cluster, eval, profRegr(covName, outcome = 'Yield',
+                                          yModel = 'Normal', xModel = "Mixed",
+                                          #nCovariates = 2,
+                                          #fixedEffectsNames = 'yield',
+                                          discreteCovs = c(names(subin[categoricalVars])),
+                                          continuousCovs = c(names(subin[numericVars])),
+                                          data = subin))
[1] "Recoding of covariate number brand_hybrid as follows"
 [1] "Replacing level AgriGold A6499STXRIB with 0"
 [2] "Replacing level AgriGold A6533VT3PRIB with 1"
 [3] "Replacing level Beck-XL 5939AMXT\x89\xe3\xa2* with 2"
 [4] "Replacing level Beck-XL 6365AMX\x89\xe3\xa2* with 3"
 [5] "Replacing level Burrus-6T54 3000GT with 4"
 [6] "Replacing level DEKALB-DKC53-78 SSRIB with 5"
 [7] "Replacing level MAT CHECK-LATE with 6"
 [8] "Replacing level Power Plus-5C17 AMXT with 7"
 [9] "Replacing level Power Plus-6P75 AMXT with 8"
[10] "Replacing level Stone-6378RIB with 9"
Random number seed: 1515513915
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 10500
Sweep: 11000
> proc.time() - ptm
   user  system elapsed
  4.963   0.702  27.238
> inputs <- generateSampleDataFile(clusSummaryNormalDiscrete())
> ptm <- proc.time()
> runInfoObj<-profRegr(yModel=inputs$yModel, xModel=inputs$xModel, nSweeps=10000, nClusInit=15, nBurn=20000,
+                      data=inputs$inputData, output="output", covNames = inputs$covName, fixedEffectsNames = inputs$fixedEffectNamesRandom number seed: 12345
Sweep: 1
ptSweep: 500
Sweep: 1000
Sweep: 1500

...

Sweep: 29500
Sweep: 30000
> proc.time() - ptm
   user  system elapsed
109.716   1.067 132.449
> result <- clusterCall(cluster, eval, profRegr(yModel=inputs$yModel, xModel=inputs$xModel, nSweeps=10000, nClusInit=15, nBurn=20000,+                                               data=inputs$inputData, output="output", covNames = inputs$covName, fixedEffectsNames Random number seed: 12345, seed=12345))
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
...
Sweep: 29500
Sweep: 30000
> proc.time() - ptm
   user  system elapsed
110.075   1.171 148.557
```

################################
###### Using Normal Queue ######
################################

> ptm <- proc.time()
> runInfoObj<-profRegr(yModel=inputs$yModel, xModel=inputs$xModel, nSweeps=10000, nClusInit=15, nBurn=20000,
+                      data=inputs$inputData, output="output", covNames = inputs$covName, fixedEffectsNames = inputsRandom number seed: 123452345)
Sweep: 1
Sweep: 500
Sweep: 1000
Sweep: 1500
....
Sweep: 29500
Sweep: 30000
> proc.time() - ptm
   user  system elapsed
 73.378   0.736 988.047
>
